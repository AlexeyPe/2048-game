local field = {{0,2,0,2},{2,2,0,0},{0,0,0,0}}

function init(self)
	msg.post(".", "acquire_input_focus")
	print("game begin")
	update_ui_field()
end

function on_input(self, action_id, action)
	if action.pressed == true then
		if action_id == hash("UP") then
			print("on_input move up")
			field_move(-1, 0)
		end
		if action_id == hash("DOWN") then
			print("on_input move down")
			field_move(1, 0)
		end
		if action_id == hash("LEFT") then
			print("on_input move left")
			field_move(0, -1)
		end
		if action_id == hash("RIGHT") then
			print("on_input move right")
			field_move(0, 1)
		end
	end
	return true
end

-- Перемещает ячейки поля по 4 сторонам
function field_move(x, y)
	print("field_move")
	print("x ", x,"y ", y)
	for i= 1, 3 do
		for ii= 1, 4 do
			if x > 0 then field_cell_move(4-i, ii, x, y)
			elseif x > 0 then field_cell_move(i, ii, x, y)
			elseif y > 0 then field_cell_move(i, 5-ii, x, y)
			else field_cell_move(i, ii, x, y)
			end
		end
	end
	field_add_new()
	update_ui_field()
end

-- Перемещает ячейку поля, вызывается из field_move
function field_cell_move(i, ii, x, y)
	print("field_cell_move, i",i, ",ii", ii, ",x",x,",y",y)
	-- если ячейка пустая - переместить
	if i+x == 0 or i+x == 4 then return end
	if field[i+x][ii+y] == 0 then
		field[i+x][ii+y] = field[i][ii]
		field[i][ii] = 0
		field_cell_move(i+x, ii+y, x, y)
	-- если ячейки одинаковые - объеденить
	elseif field[i+x][ii+y] == field[i][ii] then
		field[i+x][ii+y] = field[i][ii]*2
		field[i][ii] = 0
	end
end

-- Случайно выбирает ячейку для спавна новой 2
function field_add_new()
	print("field_add_new")
	-- local free_cell = false
	for i= 1, 3 do
		-- if free_cell then break end
		for ii= 1, 4 do
			-- if free_cell then break end
			if field[i][ii] == 0 then 
				field[i][ii] = 2
				-- free_cell = true
				return
			end
		end
	end
	if not free_cell then
		restart()
	end
end

-- Перезапускает field если field_add_new не найдёт пустую ячейку
function restart()
	print("restartupdate_ui_field")
	field = {{0,2,0,2},{2,2,0,0},{0,0,0,0}}
	update_ui_field()
end

-- Обновляет UI после field_move и field_add_new
function update_ui_field()
	print("update_ui_field")
	for i=1, 3 do
		for ii=1, 4 do
			local name = table.concat({i-1,ii-1})
			gui.set_text(gui.get_node(name), field[i][ii])
			-- gui.set_color(gui.get_node("box"), color)
		end
	end
end